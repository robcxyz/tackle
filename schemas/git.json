[{"title": "MetaGitHook", "description": "Hook to create meta repo, ie a repo that has many other repos within it. See\n [meta repo definition.](https://notes.burke.libbey.me/metarepo/#:~:text=a%20%E2%80%9CMetarepo%E2%80%9D.-,Metarepo%20Architecture,branch%20commit%20for%20each%20repository.)\n Describe the repo structure with a map and when this hook is called, it allows the\n users to operate git commands on that repo structure.", "type": "object", "properties": {"hook_type": {"title": "Hook Type", "default": "meta_repo", "type": "string"}, "if": {"title": "If", "render_by_default": true, "anyOf": [{"type": "string"}, {"type": "boolean"}]}, "else": {"title": "Else", "render_by_default": true}, "for": {"title": "For", "render_by_default": true, "anyOf": [{"type": "string"}, {"type": "array", "items": {}}]}, "reverse": {"title": "Reverse", "render_by_default": true, "anyOf": [{"type": "string"}, {"type": "boolean"}]}, "callback": {"title": "Callback", "type": "string"}, "chdir": {"title": "Chdir", "description": "Name of the hook.", "type": "string"}, "merge": {"title": "Merge", "anyOf": [{"type": "boolean"}, {"type": "string"}]}, "confirm": {"title": "Confirm"}, "input_dict": {"title": "Input Dict", "anyOf": [{"type": "object"}, {"type": "array", "items": {}}]}, "output_dict": {"title": "Output Dict", "default": {}, "anyOf": [{"type": "object"}, {"type": "array", "items": {}}]}, "existing_context": {"title": "Existing Context", "type": "object"}, "no_input": {"title": "No Input", "type": "boolean"}, "calling_directory": {"title": "Calling Directory", "type": "string", "format": "path"}, "providers": {"$ref": "#/definitions/ProviderList"}, "key_path": {"title": "Key Path", "type": "array", "items": {}}, "help": {"title": "Help", "type": "string"}, "command": {"title": "Command", "description": "The git command to run.", "type": "string"}, "repo_tree": {"title": "Repo Tree", "description": "A map of repos to clone with the keys indicating the path and values for the repo targets. See examples.", "type": "object"}, "protocol": {"title": "Protocol", "description": "Either https or ssh. Useful when using abbreviated repo references.", "default": "https", "type": "string"}, "token": {"title": "Token", "description": "A token to use with https abbreviated repo references.", "type": "string"}, "base_url": {"title": "Base Url", "description": "The base url to use with https abbreviated repo references.", "default": "github.com", "type": "string"}, "git_org": {"title": "Git Org", "description": "The git org to override with https abbreviated repo references.", "type": "string"}}, "additionalProperties": false, "definitions": {"Provider": {"title": "Provider", "description": "Base provider.", "type": "object", "properties": {"path": {"title": "Path", "type": "string"}, "hooks_path": {"title": "Hooks Path", "type": "string"}, "hook_types": {"title": "Hook Types", "default": [], "type": "array", "items": {}}, "hook_modules": {"title": "Hook Modules", "default": [], "type": "array", "items": {}}, "name": {"title": "Name", "type": "string"}, "src": {"title": "Src", "type": "string"}, "version": {"title": "Version", "type": "string"}, "requirements": {"title": "Requirements", "default": [], "type": "array", "items": {}}}}, "ProviderList": {"title": "ProviderList", "description": "Provider list object that on instantiation imports native (shipping wit tackle box),\nsettings (declared in ~/.tackle/settings.yaml), and local (in a local hooks\ndirectory).", "default": [], "type": "array", "items": {"$ref": "#/definitions/Provider"}}}}, {"title": "GitCloneHook", "description": "Hook to create clone a repo. Wraps git python `clone`.\n[Source API](https://gitpython.readthedocs.io/en/stable/reference.html#git.repo.base.Repo.clone)", "type": "object", "properties": {"hook_type": {"title": "Hook Type", "default": "git_clone", "type": "string"}, "if": {"title": "If", "render_by_default": true, "anyOf": [{"type": "string"}, {"type": "boolean"}]}, "else": {"title": "Else", "render_by_default": true}, "for": {"title": "For", "render_by_default": true, "anyOf": [{"type": "string"}, {"type": "array", "items": {}}]}, "reverse": {"title": "Reverse", "render_by_default": true, "anyOf": [{"type": "string"}, {"type": "boolean"}]}, "callback": {"title": "Callback", "type": "string"}, "chdir": {"title": "Chdir", "description": "Name of the hook.", "type": "string"}, "merge": {"title": "Merge", "anyOf": [{"type": "boolean"}, {"type": "string"}]}, "confirm": {"title": "Confirm"}, "input_dict": {"title": "Input Dict", "anyOf": [{"type": "object"}, {"type": "array", "items": {}}]}, "output_dict": {"title": "Output Dict", "default": {}, "anyOf": [{"type": "object"}, {"type": "array", "items": {}}]}, "existing_context": {"title": "Existing Context", "type": "object"}, "no_input": {"title": "No Input", "type": "boolean"}, "calling_directory": {"title": "Calling Directory", "type": "string", "format": "path"}, "providers": {"$ref": "#/definitions/ProviderList"}, "key_path": {"title": "Key Path", "type": "array", "items": {}}, "help": {"title": "Help", "type": "string"}, "url": {"title": "Url", "description": "valid git url - [Docs](http://www.kernel.org/pub/software/scm/git/docs/git-clone.html#URLS)", "type": "string"}, "to_path": {"title": "To Path", "description": "Path to which the repository should be cloned to", "type": "string"}, "progress": {"title": "Progress", "description": "See \u2018git.remote.Remote.push\u2019.", "type": "string"}, "env": {"title": "Env", "description": "Optional dictionary containing the desired environment variables. Note: Provided variables will be used to update the execution environment for git. If some variable is not specified in env and is defined in os.environ, value from os.environ will be used. If you want to unset some variable, consider providing empty string as its value.", "type": "object"}, "multi_options": {"title": "Multi Options", "description": "A list of Clone options that can be provided multiple times. One option per list item which is passed exactly as specified to clone. For example [\u2018\u2013config core.filemode=false\u2019, \u2018\u2013config core.ignorecase\u2019, \u2018\u2013recurse-submodule=repo1_path\u2019, \u2018\u2013recurse-submodule=repo2_path\u2019]", "type": "array", "items": {}}, "kwargs": {"title": "Kwargs", "description": "- odbt = ObjectDatabase Type, allowing to determine the object database implementation used by the returned Repo instance - All remaining keyword arguments are given to the git-clone command", "default": {}, "type": "object"}}, "additionalProperties": false, "definitions": {"Provider": {"title": "Provider", "description": "Base provider.", "type": "object", "properties": {"path": {"title": "Path", "type": "string"}, "hooks_path": {"title": "Hooks Path", "type": "string"}, "hook_types": {"title": "Hook Types", "default": [], "type": "array", "items": {}}, "hook_modules": {"title": "Hook Modules", "default": [], "type": "array", "items": {}}, "name": {"title": "Name", "type": "string"}, "src": {"title": "Src", "type": "string"}, "version": {"title": "Version", "type": "string"}, "requirements": {"title": "Requirements", "default": [], "type": "array", "items": {}}}}, "ProviderList": {"title": "ProviderList", "description": "Provider list object that on instantiation imports native (shipping wit tackle box),\nsettings (declared in ~/.tackle/settings.yaml), and local (in a local hooks\ndirectory).", "default": [], "type": "array", "items": {"$ref": "#/definitions/Provider"}}}}]