[{"additionalProperties": false, "description": "Hook for running python's glob module. Return a possibly empty list of path names\n that match pathname, which must be a string containing a path specification.", "properties": {"help": {"default": null, "description": "A string to display when calling with the `help` argument.", "title": "Help", "type": "string"}, "render_by_default": {"default": null, "description": "A list of string fields to wrap with jinja braces and render by default.", "items": {}, "title": "Render By Default", "type": "array"}, "render_exclude": {"default": null, "description": "A list of field names to not render.", "items": {}, "title": "Render Exclude", "type": "array"}, "is_public": {"default": null, "description": "A boolean if hook is public / callable from outside the provider).", "title": "Is Public", "type": "boolean"}, "skip_output": {"default": false, "description": "A flag to skip the output and not set the key. Can also be set within a hook call.", "title": "Skip Output", "type": "boolean"}, "args": {"default": ["pathname"], "items": {}, "title": "Args", "type": "array"}, "kwargs": {"default": null, "description": "A field name of type dict to map additional arguments to.", "title": "Kwargs", "type": "string"}, "hook_name": {"default": "glob", "title": "Hook Name", "type": "string"}, "pathname": {"description": "The path to file or directory", "title": "Pathname", "type": "string"}, "root_dir": {"default": null, "description": "The root dir to run glob from.", "title": "Root Dir", "type": "string"}, "dir_fd": {"default": null, "description": "Similar to root_dir, but it specifies the root directory as an open directory descriptor instead of a path", "title": "Dir Fd", "type": "integer"}, "recursive": {"default": false, "description": "Search underlying directories.", "title": "Recursive", "type": "boolean"}, "include_hidden": {"default": false, "description": "Include hidden files / dirs.", "title": "Include Hidden", "type": "boolean"}}, "required": ["pathname"], "title": "GlobHook", "type": "object"}, {"additionalProperties": false, "description": "Hook for getting the basename from a path.", "properties": {"help": {"default": null, "description": "A string to display when calling with the `help` argument.", "title": "Help", "type": "string"}, "render_by_default": {"default": null, "description": "A list of string fields to wrap with jinja braces and render by default.", "items": {}, "title": "Render By Default", "type": "array"}, "render_exclude": {"default": null, "description": "A list of field names to not render.", "items": {}, "title": "Render Exclude", "type": "array"}, "is_public": {"default": null, "description": "A boolean if hook is public / callable from outside the provider).", "title": "Is Public", "type": "boolean"}, "skip_output": {"default": false, "description": "A flag to skip the output and not set the key. Can also be set within a hook call.", "title": "Skip Output", "type": "boolean"}, "args": {"default": ["path"], "items": {}, "title": "Args", "type": "array"}, "kwargs": {"default": null, "description": "A field name of type dict to map additional arguments to.", "title": "Kwargs", "type": "string"}, "hook_name": {"default": "basename", "title": "Hook Name", "type": "string"}, "path": {"description": "Path to the file/directory to get the basename of.", "render_by_default": true, "title": "Path", "type": "string"}}, "required": ["path"], "title": "PathBasenameHook", "type": "object"}, {"additionalProperties": false, "description": "Hook for getting the basename from a path.", "properties": {"help": {"default": null, "description": "A string to display when calling with the `help` argument.", "title": "Help", "type": "string"}, "render_by_default": {"default": null, "description": "A list of string fields to wrap with jinja braces and render by default.", "items": {}, "title": "Render By Default", "type": "array"}, "render_exclude": {"default": null, "description": "A list of field names to not render.", "items": {}, "title": "Render Exclude", "type": "array"}, "is_public": {"default": null, "description": "A boolean if hook is public / callable from outside the provider).", "title": "Is Public", "type": "boolean"}, "skip_output": {"default": false, "description": "A flag to skip the output and not set the key. Can also be set within a hook call.", "title": "Skip Output", "type": "boolean"}, "args": {"default": ["path"], "items": {}, "title": "Args", "type": "array"}, "kwargs": {"default": null, "description": "A field name of type dict to map additional arguments to.", "title": "Kwargs", "type": "string"}, "hook_name": {"default": "dirname", "title": "Hook Name", "type": "string"}, "path": {"description": "Path to the file/directory to get the directory name of.", "render_by_default": true, "title": "Path", "type": "string"}}, "required": ["path"], "title": "PathDirNameHook", "type": "object"}, {"additionalProperties": false, "description": "Hook for os package 'path.exists'.", "properties": {"help": {"default": null, "description": "A string to display when calling with the `help` argument.", "title": "Help", "type": "string"}, "render_by_default": {"default": null, "description": "A list of string fields to wrap with jinja braces and render by default.", "items": {}, "title": "Render By Default", "type": "array"}, "render_exclude": {"default": null, "description": "A list of field names to not render.", "items": {}, "title": "Render Exclude", "type": "array"}, "is_public": {"default": null, "description": "A boolean if hook is public / callable from outside the provider).", "title": "Is Public", "type": "boolean"}, "skip_output": {"default": false, "description": "A flag to skip the output and not set the key. Can also be set within a hook call.", "title": "Skip Output", "type": "boolean"}, "args": {"default": ["path"], "items": {}, "title": "Args", "type": "array"}, "kwargs": {"default": null, "description": "A field name of type dict to map additional arguments to.", "title": "Kwargs", "type": "string"}, "hook_name": {"default": "path_exists", "title": "Hook Name", "type": "string"}, "path": {"description": "The path to file or directory", "title": "Path", "type": "string"}}, "required": ["path"], "title": "PathExistsListHook", "type": "object"}, {"additionalProperties": false, "description": "Hook for os package 'path.isdir'.", "properties": {"help": {"default": null, "description": "A string to display when calling with the `help` argument.", "title": "Help", "type": "string"}, "render_by_default": {"default": null, "description": "A list of string fields to wrap with jinja braces and render by default.", "items": {}, "title": "Render By Default", "type": "array"}, "render_exclude": {"default": null, "description": "A list of field names to not render.", "items": {}, "title": "Render Exclude", "type": "array"}, "is_public": {"default": null, "description": "A boolean if hook is public / callable from outside the provider).", "title": "Is Public", "type": "boolean"}, "skip_output": {"default": false, "description": "A flag to skip the output and not set the key. Can also be set within a hook call.", "title": "Skip Output", "type": "boolean"}, "args": {"default": ["path"], "items": {}, "title": "Args", "type": "array"}, "kwargs": {"default": null, "description": "A field name of type dict to map additional arguments to.", "title": "Kwargs", "type": "string"}, "hook_name": {"default": "isdir", "title": "Hook Name", "type": "string"}, "path": {"description": "The path to a directory", "title": "Path", "type": "string"}}, "required": ["path"], "title": "PathIsDirListHook", "type": "object"}, {"additionalProperties": false, "description": "Hook for os package 'path.isfile'.", "properties": {"help": {"default": null, "description": "A string to display when calling with the `help` argument.", "title": "Help", "type": "string"}, "render_by_default": {"default": null, "description": "A list of string fields to wrap with jinja braces and render by default.", "items": {}, "title": "Render By Default", "type": "array"}, "render_exclude": {"default": null, "description": "A list of field names to not render.", "items": {}, "title": "Render Exclude", "type": "array"}, "is_public": {"default": null, "description": "A boolean if hook is public / callable from outside the provider).", "title": "Is Public", "type": "boolean"}, "skip_output": {"default": false, "description": "A flag to skip the output and not set the key. Can also be set within a hook call.", "title": "Skip Output", "type": "boolean"}, "args": {"default": ["path"], "items": {}, "title": "Args", "type": "array"}, "kwargs": {"default": null, "description": "A field name of type dict to map additional arguments to.", "title": "Kwargs", "type": "string"}, "hook_name": {"default": "isfile", "title": "Hook Name", "type": "string"}, "path": {"description": "The path to a file", "title": "Path", "type": "string"}}, "required": ["path"], "title": "PathIsFileListHook", "type": "object"}, {"additionalProperties": false, "description": "Hook joining paths.", "properties": {"help": {"default": null, "description": "A string to display when calling with the `help` argument.", "title": "Help", "type": "string"}, "render_by_default": {"default": null, "description": "A list of string fields to wrap with jinja braces and render by default.", "items": {}, "title": "Render By Default", "type": "array"}, "render_exclude": {"default": null, "description": "A list of field names to not render.", "items": {}, "title": "Render Exclude", "type": "array"}, "is_public": {"default": null, "description": "A boolean if hook is public / callable from outside the provider).", "title": "Is Public", "type": "boolean"}, "skip_output": {"default": false, "description": "A flag to skip the output and not set the key. Can also be set within a hook call.", "title": "Skip Output", "type": "boolean"}, "args": {"default": ["paths"], "items": {}, "title": "Args", "type": "array"}, "kwargs": {"default": null, "description": "A field name of type dict to map additional arguments to.", "title": "Kwargs", "type": "string"}, "hook_name": {"default": "path_join", "title": "Hook Name", "type": "string"}, "paths": {"description": "List of items in a path to file or directory.", "items": {}, "render_by_default": true, "title": "Paths", "type": "array"}}, "required": ["paths"], "title": "PathJoinHook", "type": "object"}, {"additionalProperties": false, "description": "Hook creating symlinks wrapping `os.symlink` functionality. Wraps\n[`os.symlink`](https://www.geeksforgeeks.org/python-os-symlink-method/)", "properties": {"help": {"default": null, "description": "A string to display when calling with the `help` argument.", "title": "Help", "type": "string"}, "render_by_default": {"default": null, "description": "A list of string fields to wrap with jinja braces and render by default.", "items": {}, "title": "Render By Default", "type": "array"}, "render_exclude": {"default": null, "description": "A list of field names to not render.", "items": {}, "title": "Render Exclude", "type": "array"}, "is_public": {"default": null, "description": "A boolean if hook is public / callable from outside the provider).", "title": "Is Public", "type": "boolean"}, "skip_output": {"default": false, "description": "A flag to skip the output and not set the key. Can also be set within a hook call.", "title": "Skip Output", "type": "boolean"}, "args": {"default": ["src", "dst"], "items": {}, "title": "Args", "type": "array"}, "kwargs": {"default": null, "description": "A field name of type dict to map additional arguments to.", "title": "Kwargs", "type": "string"}, "hook_name": {"default": "symlink", "title": "Hook Name", "type": "string"}, "src": {"description": "String or list of sources, either a directories or files", "title": "Src", "type": "string"}, "dst": {"description": "String for path to copy to", "title": "Dst", "type": "string"}, "target_is_directory": {"default": false, "description": "The default value of this parameter is False. If the specified target path is directory then its value should be True.", "title": "Target Is Directory", "type": "boolean"}, "overwrite": {"default": false, "description": "Overwrite the destination.", "title": "Overwrite", "type": "boolean"}}, "required": ["src", "dst"], "title": "SymlinkHook", "type": "object"}, {"additionalProperties": false, "description": "Hook for flattening a dictionary into a list of paths.", "properties": {"help": {"default": null, "description": "A string to display when calling with the `help` argument.", "title": "Help", "type": "string"}, "render_by_default": {"default": null, "description": "A list of string fields to wrap with jinja braces and render by default.", "items": {}, "title": "Render By Default", "type": "array"}, "render_exclude": {"default": null, "description": "A list of field names to not render.", "items": {}, "title": "Render Exclude", "type": "array"}, "is_public": {"default": null, "description": "A boolean if hook is public / callable from outside the provider).", "title": "Is Public", "type": "boolean"}, "skip_output": {"default": false, "description": "A flag to skip the output and not set the key. Can also be set within a hook call.", "title": "Skip Output", "type": "boolean"}, "args": {"default": ["paths"], "items": {}, "title": "Args", "type": "array"}, "kwargs": {"default": null, "description": "A field name of type dict to map additional arguments to.", "title": "Kwargs", "type": "string"}, "hook_name": {"default": "flatten_paths", "title": "Hook Name", "type": "string"}, "paths": {"anyOf": [{"type": "object"}, {"items": {}, "type": "array"}], "description": "A list or map representing paths to files that should be flattened", "title": "Paths"}, "base_path": {"default": "", "description": "A base path to prefix in the output.", "title": "Base Path", "type": "string"}}, "required": ["paths"], "title": "FlattenPathHook", "type": "object"}, {"additionalProperties": false, "description": "Hook for `listdir`. Lists the contents of a directory.", "properties": {"help": {"default": null, "description": "A string to display when calling with the `help` argument.", "title": "Help", "type": "string"}, "render_by_default": {"default": null, "description": "A list of string fields to wrap with jinja braces and render by default.", "items": {}, "title": "Render By Default", "type": "array"}, "render_exclude": {"default": null, "description": "A list of field names to not render.", "items": {}, "title": "Render Exclude", "type": "array"}, "is_public": {"default": null, "description": "A boolean if hook is public / callable from outside the provider).", "title": "Is Public", "type": "boolean"}, "skip_output": {"default": false, "description": "A flag to skip the output and not set the key. Can also be set within a hook call.", "title": "Skip Output", "type": "boolean"}, "args": {"default": ["path"], "items": {}, "title": "Args", "type": "array"}, "kwargs": {"default": null, "description": "A field name of type dict to map additional arguments to.", "title": "Kwargs", "type": "string"}, "hook_name": {"default": "listdir", "title": "Hook Name", "type": "string"}, "path": {"default": ".", "description": "Path to directory to list contents.", "title": "Path", "type": "string"}, "sort": {"default": false, "description": "Boolean to sort the output", "title": "Sort", "type": "boolean"}, "ignore_hidden": {"default": false, "description": "Boolean to ignore hidden files or directories", "title": "Ignore Hidden", "type": "boolean"}, "ignore_hidden_files": {"default": false, "description": "Boolean to ignore hidden files", "title": "Ignore Hidden Files", "type": "boolean"}, "ignore_hidden_directories": {"default": false, "description": "Boolean to ignore hidden directories", "title": "Ignore Hidden Directories", "type": "boolean"}, "only_files": {"default": false, "description": "Only return files.", "title": "Only Files", "type": "boolean"}, "only_directories": {"default": false, "description": "Only return directories.", "title": "Only Directories", "type": "boolean"}, "exclude": {"anyOf": [{"type": "string"}, {"items": {}, "type": "array"}], "default": null, "description": "A list or string of regexes to ignore.", "title": "Exclude"}}, "title": "ListdirHook", "type": "object"}, {"additionalProperties": false, "description": "Hook to find the absolute path to a file or directory in child directories.", "properties": {"help": {"default": null, "description": "A string to display when calling with the `help` argument.", "title": "Help", "type": "string"}, "render_by_default": {"default": null, "description": "A list of string fields to wrap with jinja braces and render by default.", "items": {}, "title": "Render By Default", "type": "array"}, "render_exclude": {"default": null, "description": "A list of field names to not render.", "items": {}, "title": "Render Exclude", "type": "array"}, "is_public": {"default": null, "description": "A boolean if hook is public / callable from outside the provider).", "title": "Is Public", "type": "boolean"}, "skip_output": {"default": false, "description": "A flag to skip the output and not set the key. Can also be set within a hook call.", "title": "Skip Output", "type": "boolean"}, "args": {"default": ["target"], "items": {}, "title": "Args", "type": "array"}, "kwargs": {"default": null, "description": "A field name of type dict to map additional arguments to.", "title": "Kwargs", "type": "string"}, "hook_name": {"default": "find_in_child", "title": "Hook Name", "type": "string"}, "target": {"description": "The name of the file to find the absolute path to", "title": "Target", "type": "string"}, "fallback": {"default": null, "description": "String to fallback on if the target is not found.", "title": "Fallback"}, "starting_dir": {"default": ".", "description": "The starting directory to search from. Defaults to current working directory.", "title": "Starting Dir", "type": "string"}}, "required": ["target"], "title": "FindInChildHook", "type": "object"}, {"additionalProperties": false, "description": "Hook to find the absolute path to a file or directory in parent directories.", "properties": {"help": {"default": null, "description": "A string to display when calling with the `help` argument.", "title": "Help", "type": "string"}, "render_by_default": {"default": null, "description": "A list of string fields to wrap with jinja braces and render by default.", "items": {}, "title": "Render By Default", "type": "array"}, "render_exclude": {"default": null, "description": "A list of field names to not render.", "items": {}, "title": "Render Exclude", "type": "array"}, "is_public": {"default": null, "description": "A boolean if hook is public / callable from outside the provider).", "title": "Is Public", "type": "boolean"}, "skip_output": {"default": false, "description": "A flag to skip the output and not set the key. Can also be set within a hook call.", "title": "Skip Output", "type": "boolean"}, "args": {"default": ["target"], "items": {}, "title": "Args", "type": "array"}, "kwargs": {"default": null, "description": "A field name of type dict to map additional arguments to.", "title": "Kwargs", "type": "string"}, "hook_name": {"default": "find_in_parent", "title": "Hook Name", "type": "string"}, "target": {"description": "The name of the file to find the absolute path to", "title": "Target", "type": "string"}, "fallback": {"default": null, "description": "String to fallback on if the target is not found.", "title": "Fallback"}, "starting_dir": {"default": ".", "description": "The starting directory to search from. Defaults to current working directory.", "title": "Starting Dir", "type": "string"}}, "required": ["target"], "title": "FindInParentHook", "type": "object"}, {"additionalProperties": false, "description": "Hook creating a directory.", "properties": {"help": {"default": null, "description": "A string to display when calling with the `help` argument.", "title": "Help", "type": "string"}, "render_by_default": {"default": null, "description": "A list of string fields to wrap with jinja braces and render by default.", "items": {}, "title": "Render By Default", "type": "array"}, "render_exclude": {"default": null, "description": "A list of field names to not render.", "items": {}, "title": "Render Exclude", "type": "array"}, "is_public": {"default": null, "description": "A boolean if hook is public / callable from outside the provider).", "title": "Is Public", "type": "boolean"}, "skip_output": {"default": false, "description": "A flag to skip the output and not set the key. Can also be set within a hook call.", "title": "Skip Output", "type": "boolean"}, "args": {"default": ["path"], "items": {}, "title": "Args", "type": "array"}, "kwargs": {"default": null, "description": "A field name of type dict to map additional arguments to.", "title": "Kwargs", "type": "string"}, "hook_name": {"default": "mkdir", "title": "Hook Name", "type": "string"}, "path": {"description": "The path to file or directory", "title": "Path", "type": "string"}}, "required": ["path"], "title": "MakeDirectoryHook", "type": "object"}, {"additionalProperties": false, "description": "Hook creating a temporary directory.", "properties": {"help": {"default": null, "description": "A string to display when calling with the `help` argument.", "title": "Help", "type": "string"}, "render_by_default": {"default": null, "description": "A list of string fields to wrap with jinja braces and render by default.", "items": {}, "title": "Render By Default", "type": "array"}, "render_exclude": {"default": null, "description": "A list of field names to not render.", "items": {}, "title": "Render Exclude", "type": "array"}, "is_public": {"default": null, "description": "A boolean if hook is public / callable from outside the provider).", "title": "Is Public", "type": "boolean"}, "skip_output": {"default": false, "description": "A flag to skip the output and not set the key. Can also be set within a hook call.", "title": "Skip Output", "type": "boolean"}, "args": {"default": [], "description": "A list of fields map arguments. See [docs]() for details.", "items": {}, "title": "Args", "type": "array"}, "kwargs": {"default": null, "description": "A field name of type dict to map additional arguments to.", "title": "Kwargs", "type": "string"}, "hook_name": {"default": "temp_dir", "title": "Hook Name", "type": "string"}}, "title": "MakeTempDirectoryHook", "type": "object"}]