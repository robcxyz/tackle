[{"additionalProperties": false, "description": "Hook for removing (`pop`) a key from a dict or item from a list based on index.\nFollows python's [pop](https://docs.python.org/3/tutorial/datastructures.html)", "properties": {"help": {"default": null, "description": "A string to display when calling with the `help` argument.", "title": "Help", "type": "string"}, "render_by_default": {"default": null, "description": "A list of string fields to wrap with jinja braces and render by default.", "items": {}, "title": "Render By Default", "type": "array"}, "render_exclude": {"default": null, "description": "A list of field names to not render.", "items": {}, "title": "Render Exclude", "type": "array"}, "is_public": {"default": null, "description": "A boolean if hook is public / callable from outside the provider).", "title": "Is Public", "type": "boolean"}, "skip_output": {"default": false, "description": "A flag to skip the output and not set the key. Can also be set within a hook call.", "title": "Skip Output", "type": "boolean"}, "args": {"default": ["src", "item"], "items": {}, "title": "Args", "type": "array"}, "kwargs": {"default": null, "description": "A field name of type dict to map additional arguments to.", "title": "Kwargs", "type": "string"}, "hook_name": {"default": "pop", "title": "Hook Name", "type": "string"}, "src": {"anyOf": [{"type": "object"}, {"type": "string"}, {"items": {}, "type": "array"}], "description": "A list to remove an item from or dict to remove a key and output the result or a str with separators or list for a key path to the item operate on within the context.", "title": "Src"}, "src_is_key_path": {"default": false, "description": "If the src is a list and is meant to be a key path.", "title": "Src Is Key Path", "type": "boolean"}, "item": {"anyOf": [{"type": "string"}, {"type": "integer"}], "default": null, "description": "A string for a key to remove from a dict `src` or integer for an index to remove from a list `src`.", "title": "Item"}, "sep": {"default": "/", "description": "For string src's, a separator for key path.", "title": "Sep", "type": "string"}}, "required": ["src"], "title": "DictPopHook", "type": "object"}, {"additionalProperties": false, "description": "Hook for updating dict objects with values, appending list values, or overwriting\n string / int / float values.", "properties": {"help": {"default": null, "description": "A string to display when calling with the `help` argument.", "title": "Help", "type": "string"}, "render_by_default": {"default": null, "description": "A list of string fields to wrap with jinja braces and render by default.", "items": {}, "title": "Render By Default", "type": "array"}, "render_exclude": {"default": null, "description": "A list of field names to not render.", "items": {}, "title": "Render Exclude", "type": "array"}, "is_public": {"default": null, "description": "A boolean if hook is public / callable from outside the provider).", "title": "Is Public", "type": "boolean"}, "skip_output": {"default": false, "description": "A flag to skip the output and not set the key. Can also be set within a hook call.", "title": "Skip Output", "type": "boolean"}, "args": {"default": ["src", "input"], "items": {}, "title": "Args", "type": "array"}, "kwargs": {"default": null, "description": "A field name of type dict to map additional arguments to.", "title": "Kwargs", "type": "string"}, "hook_name": {"default": "update", "title": "Hook Name", "type": "string"}, "src": {"anyOf": [{"type": "object"}, {"type": "string"}, {"items": {}, "type": "array"}], "description": "A dict to update and output the result or a str with separators or list for a key path to the item update within the context.", "title": "Src"}, "input": {"description": "The value to update the input `src`.", "title": "Input"}, "sep": {"default": "/", "description": "For string src's, a separator for key path.", "title": "Sep", "type": "string"}}, "required": ["src", "input"], "title": "DictUpdateHook", "type": "object"}, {"additionalProperties": false, "description": "Hook for returning the values of a dict as a list.", "properties": {"help": {"default": null, "description": "A string to display when calling with the `help` argument.", "title": "Help", "type": "string"}, "render_by_default": {"default": null, "description": "A list of string fields to wrap with jinja braces and render by default.", "items": {}, "title": "Render By Default", "type": "array"}, "render_exclude": {"default": null, "description": "A list of field names to not render.", "items": {}, "title": "Render Exclude", "type": "array"}, "is_public": {"default": null, "description": "A boolean if hook is public / callable from outside the provider).", "title": "Is Public", "type": "boolean"}, "skip_output": {"default": false, "description": "A flag to skip the output and not set the key. Can also be set within a hook call.", "title": "Skip Output", "type": "boolean"}, "args": {"default": ["src"], "items": {}, "title": "Args", "type": "array"}, "kwargs": {"default": null, "description": "A field name of type dict to map additional arguments to.", "title": "Kwargs", "type": "string"}, "hook_name": {"default": "values", "title": "Hook Name", "type": "string"}, "src": {"anyOf": [{"type": "object"}, {"type": "string"}, {"items": {}, "type": "array"}], "description": "A dict to get the values from and output the result or a str with separators or list for a key path to the element to get the values from within the context.", "title": "Src"}, "sep": {"default": "/", "description": "For string src's, a separator for key path.", "title": "Sep", "type": "string"}}, "required": ["src"], "title": "DictValuesHook", "type": "object"}, {"additionalProperties": false, "description": "Hook for getting a key based on a key path which is a list with keys and numbers\n for indexes in a list.", "properties": {"help": {"default": null, "description": "A string to display when calling with the `help` argument.", "title": "Help", "type": "string"}, "render_by_default": {"default": null, "description": "A list of string fields to wrap with jinja braces and render by default.", "items": {}, "title": "Render By Default", "type": "array"}, "render_exclude": {"default": null, "description": "A list of field names to not render.", "items": {}, "title": "Render Exclude", "type": "array"}, "is_public": {"default": null, "description": "A boolean if hook is public / callable from outside the provider).", "title": "Is Public", "type": "boolean"}, "skip_output": {"default": false, "description": "A flag to skip the output and not set the key. Can also be set within a hook call.", "title": "Skip Output", "type": "boolean"}, "args": {"default": ["path"], "items": {}, "title": "Args", "type": "array"}, "kwargs": {"default": null, "description": "A field name of type dict to map additional arguments to.", "title": "Kwargs", "type": "string"}, "hook_name": {"default": "delete", "title": "Hook Name", "type": "string"}, "path": {"anyOf": [{"items": {}, "type": "array"}, {"type": "string"}], "description": "A list or string with a separator for the path to the value you want to update with strings for keys and ints for indexes in the list.", "title": "Path"}, "sep": {"default": "/", "description": "For string paths, a separator for key path.", "title": "Sep", "type": "string"}}, "required": ["path"], "title": "DeleteKeyHook", "type": "object"}, {"additionalProperties": false, "description": "Hook for getting a key based on a key path which is a list with keys and numbers\n for indexes in a list.", "properties": {"help": {"default": null, "description": "A string to display when calling with the `help` argument.", "title": "Help", "type": "string"}, "render_by_default": {"default": null, "description": "A list of string fields to wrap with jinja braces and render by default.", "items": {}, "title": "Render By Default", "type": "array"}, "render_exclude": {"default": null, "description": "A list of field names to not render.", "items": {}, "title": "Render Exclude", "type": "array"}, "is_public": {"default": null, "description": "A boolean if hook is public / callable from outside the provider).", "title": "Is Public", "type": "boolean"}, "skip_output": {"default": false, "description": "A flag to skip the output and not set the key. Can also be set within a hook call.", "title": "Skip Output", "type": "boolean"}, "args": {"default": ["path", "fallback"], "items": {}, "title": "Args", "type": "array"}, "kwargs": {"default": null, "description": "A field name of type dict to map additional arguments to.", "title": "Kwargs", "type": "string"}, "hook_name": {"default": "get", "title": "Hook Name", "type": "string"}, "path": {"anyOf": [{"items": {}, "type": "array"}, {"type": "string"}], "description": "A list or string with a separator for the path to the value you want to update with strings for keys and ints for indexes in the list.", "title": "Path"}, "sep": {"default": "/", "description": "For string paths, a separator for key path.", "title": "Sep", "type": "string"}, "fallback": {"default": "None", "description": "Fallback value if the keys is not found.", "title": "Fallback"}}, "required": ["path"], "title": "GetKeyHook", "type": "object"}, {"additionalProperties": false, "description": "Hook for returning the keys of a dict as a list.", "properties": {"help": {"default": null, "description": "A string to display when calling with the `help` argument.", "title": "Help", "type": "string"}, "render_by_default": {"default": null, "description": "A list of string fields to wrap with jinja braces and render by default.", "items": {}, "title": "Render By Default", "type": "array"}, "render_exclude": {"default": null, "description": "A list of field names to not render.", "items": {}, "title": "Render Exclude", "type": "array"}, "is_public": {"default": null, "description": "A boolean if hook is public / callable from outside the provider).", "title": "Is Public", "type": "boolean"}, "skip_output": {"default": false, "description": "A flag to skip the output and not set the key. Can also be set within a hook call.", "title": "Skip Output", "type": "boolean"}, "args": {"default": ["src"], "items": {}, "title": "Args", "type": "array"}, "kwargs": {"default": null, "description": "A field name of type dict to map additional arguments to.", "title": "Kwargs", "type": "string"}, "hook_name": {"default": "keys", "title": "Hook Name", "type": "string"}, "src": {"anyOf": [{"type": "object"}, {"type": "string"}, {"items": {}, "type": "array"}], "description": "A dict to get the keys from and output the result or a str with separators or list for a key path to the element to get the keys from within the context.", "title": "Src"}, "sep": {"default": "/", "description": "For string src's, a separator for key path.", "title": "Sep", "type": "string"}}, "required": ["src"], "title": "DictKeysHook", "type": "object"}, {"additionalProperties": false, "description": "Hook for updating dict objects with items.", "properties": {"help": {"default": null, "description": "A string to display when calling with the `help` argument.", "title": "Help", "type": "string"}, "render_by_default": {"default": null, "description": "A list of string fields to wrap with jinja braces and render by default.", "items": {}, "title": "Render By Default", "type": "array"}, "render_exclude": {"default": null, "description": "A list of field names to not render.", "items": {}, "title": "Render Exclude", "type": "array"}, "is_public": {"default": null, "description": "A boolean if hook is public / callable from outside the provider).", "title": "Is Public", "type": "boolean"}, "skip_output": {"default": false, "description": "A flag to skip the output and not set the key. Can also be set within a hook call.", "title": "Skip Output", "type": "boolean"}, "args": {"default": ["src", "item"], "items": {}, "title": "Args", "type": "array"}, "kwargs": {"default": null, "description": "A field name of type dict to map additional arguments to.", "title": "Kwargs", "type": "string"}, "hook_name": {"default": "append", "title": "Hook Name", "type": "string"}, "src": {"anyOf": [{"items": {}, "type": "array"}, {"type": "string"}], "description": "A list append to and output the result or a str with separators or list for a key path to the element to append to within the context.", "title": "Src"}, "src_is_key_path": {"default": false, "description": "If the src is a list and is meant to be a key path.", "title": "Src Is Key Path", "type": "boolean"}, "sep": {"default": "/", "description": "For string src's, a separator for key path.", "title": "Sep", "type": "string"}, "item": {"description": "An item to append to a list.", "title": "Item"}}, "required": ["src", "item"], "title": "AppendHook", "type": "object"}, {"additionalProperties": false, "description": "Hook for setting a key based on a key path which is a list with keys and numbers\n for indexes in a list.", "properties": {"help": {"default": null, "description": "A string to display when calling with the `help` argument.", "title": "Help", "type": "string"}, "render_by_default": {"default": null, "description": "A list of string fields to wrap with jinja braces and render by default.", "items": {}, "title": "Render By Default", "type": "array"}, "render_exclude": {"default": null, "description": "A list of field names to not render.", "items": {}, "title": "Render Exclude", "type": "array"}, "is_public": {"default": null, "description": "A boolean if hook is public / callable from outside the provider).", "title": "Is Public", "type": "boolean"}, "skip_output": {"default": true, "title": "Skip Output", "type": "boolean"}, "args": {"default": ["path", "value"], "items": {}, "title": "Args", "type": "array"}, "kwargs": {"default": null, "description": "A field name of type dict to map additional arguments to.", "title": "Kwargs", "type": "string"}, "hook_name": {"default": "set", "title": "Hook Name", "type": "string"}, "path": {"description": "A list or string with a separator for the path to the value you want to update with strings for keys and ints for indexes in the list.", "title": "Path"}, "value": {"description": "The value to update the key with.", "title": "Value"}, "sep": {"default": "/", "description": "For string paths, a separator for key path.", "title": "Sep", "type": "string"}}, "required": ["path", "value"], "title": "SetKeyHook", "type": "object"}]