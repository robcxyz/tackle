[{"additionalProperties": false, "description": "Join a list of strings with a separator.", "properties": {"help": {"default": null, "description": "A string to display when calling with the `help` argument.", "title": "Help", "type": "string"}, "render_by_default": {"default": null, "description": "A list of string fields to wrap with jinja braces and render by default.", "items": {}, "title": "Render By Default", "type": "array"}, "render_exclude": {"default": null, "description": "A list of field names to not render.", "items": {}, "title": "Render Exclude", "type": "array"}, "is_public": {"default": null, "description": "A boolean if hook is public / callable from outside the provider).", "title": "Is Public", "type": "boolean"}, "skip_output": {"default": false, "description": "A flag to skip the output and not set the key. Can also be set within a hook call.", "title": "Skip Output", "type": "boolean"}, "args": {"default": ["input", "separator"], "items": {}, "title": "Args", "type": "array"}, "kwargs": {"default": null, "description": "A field name of type dict to map additional arguments to.", "title": "Kwargs", "type": "string"}, "hook_name": {"default": "join", "title": "Hook Name", "type": "string"}, "input": {"description": "A list of strings to join.", "items": {"anyOf": [{"type": "string"}, {"type": "integer"}]}, "render_by_default": true, "title": "Input", "type": "array"}, "separator": {"default": "", "description": "String separator.", "title": "Separator", "type": "string"}}, "required": ["input"], "title": "JoinHook", "type": "object"}, {"additionalProperties": false, "description": "Hook for splitting a string into as list based on a separator.", "properties": {"help": {"default": null, "description": "A string to display when calling with the `help` argument.", "title": "Help", "type": "string"}, "render_by_default": {"default": null, "description": "A list of string fields to wrap with jinja braces and render by default.", "items": {}, "title": "Render By Default", "type": "array"}, "render_exclude": {"default": null, "description": "A list of field names to not render.", "items": {}, "title": "Render Exclude", "type": "array"}, "is_public": {"default": null, "description": "A boolean if hook is public / callable from outside the provider).", "title": "Is Public", "type": "boolean"}, "skip_output": {"default": false, "description": "A flag to skip the output and not set the key. Can also be set within a hook call.", "title": "Skip Output", "type": "boolean"}, "args": {"default": ["input", "separator"], "items": {}, "title": "Args", "type": "array"}, "kwargs": {"default": null, "description": "A field name of type dict to map additional arguments to.", "title": "Kwargs", "type": "string"}, "hook_name": {"default": "split", "title": "Hook Name", "type": "string"}, "input": {"description": "A string to split into a list", "title": "Input", "type": "string"}, "separator": {"default": "/", "description": "String separator", "title": "Separator", "type": "string"}}, "required": ["input"], "title": "SplitHook", "type": "object"}, {"additionalProperties": false, "description": "Hook checking if a string ends with another string.\n[Docs](https://www.tutorialspoint.com/python/string_startswith.htm)", "properties": {"help": {"default": null, "description": "A string to display when calling with the `help` argument.", "title": "Help", "type": "string"}, "render_by_default": {"default": null, "description": "A list of string fields to wrap with jinja braces and render by default.", "items": {}, "title": "Render By Default", "type": "array"}, "render_exclude": {"default": null, "description": "A list of field names to not render.", "items": {}, "title": "Render Exclude", "type": "array"}, "is_public": {"default": null, "description": "A boolean if hook is public / callable from outside the provider).", "title": "Is Public", "type": "boolean"}, "skip_output": {"default": false, "description": "A flag to skip the output and not set the key. Can also be set within a hook call.", "title": "Skip Output", "type": "boolean"}, "args": {"default": ["input", "match"], "items": {}, "title": "Args", "type": "array"}, "kwargs": {"default": null, "description": "A field name of type dict to map additional arguments to.", "title": "Kwargs", "type": "string"}, "hook_name": {"default": "ends_with", "title": "Hook Name", "type": "string"}, "input": {"description": "A string to check", "title": "Input", "type": "string"}, "match": {"description": "The chars to match", "title": "Match", "type": "string"}, "beg": {"default": null, "description": "This is the optional parameter to set start index of the matching boundary.", "title": "Beg", "type": "integer"}, "end": {"default": null, "description": "This is the optional parameter to end start index of the matching boundary.", "title": "End", "type": "integer"}}, "required": ["input", "match"], "title": "EndsWithHook", "type": "object"}, {"additionalProperties": false, "description": "Hook running a regex against a string.\n[Docs](https://docs.python.org/3/library/re.html#re.match)", "properties": {"help": {"default": null, "description": "A string to display when calling with the `help` argument.", "title": "Help", "type": "string"}, "render_by_default": {"default": null, "description": "A list of string fields to wrap with jinja braces and render by default.", "items": {}, "title": "Render By Default", "type": "array"}, "render_exclude": {"default": null, "description": "A list of field names to not render.", "items": {}, "title": "Render Exclude", "type": "array"}, "is_public": {"default": null, "description": "A boolean if hook is public / callable from outside the provider).", "title": "Is Public", "type": "boolean"}, "skip_output": {"default": false, "description": "A flag to skip the output and not set the key. Can also be set within a hook call.", "title": "Skip Output", "type": "boolean"}, "args": {"default": ["pattern", "string"], "items": {}, "title": "Args", "type": "array"}, "kwargs": {"default": null, "description": "A field name of type dict to map additional arguments to.", "title": "Kwargs", "type": "string"}, "hook_name": {"default": "regex_match", "title": "Hook Name", "type": "string"}, "pattern": {"description": "A regex pattern to check.", "title": "Pattern", "type": "string"}, "string": {"description": "A string to check.", "title": "String", "type": "string"}}, "required": ["pattern", "string"], "title": "RegexMatchHook", "type": "object"}, {"additionalProperties": false, "description": "Hook checking if a string starts with another string.\n[Docs](https://www.tutorialspoint.com/python/string_startswith.htm)", "properties": {"help": {"default": null, "description": "A string to display when calling with the `help` argument.", "title": "Help", "type": "string"}, "render_by_default": {"default": null, "description": "A list of string fields to wrap with jinja braces and render by default.", "items": {}, "title": "Render By Default", "type": "array"}, "render_exclude": {"default": null, "description": "A list of field names to not render.", "items": {}, "title": "Render Exclude", "type": "array"}, "is_public": {"default": null, "description": "A boolean if hook is public / callable from outside the provider).", "title": "Is Public", "type": "boolean"}, "skip_output": {"default": false, "description": "A flag to skip the output and not set the key. Can also be set within a hook call.", "title": "Skip Output", "type": "boolean"}, "args": {"default": ["input", "match"], "items": {}, "title": "Args", "type": "array"}, "kwargs": {"default": null, "description": "A field name of type dict to map additional arguments to.", "title": "Kwargs", "type": "string"}, "hook_name": {"default": "starts_with", "title": "Hook Name", "type": "string"}, "input": {"description": "A string to check", "title": "Input", "type": "string"}, "match": {"description": "The chars to match", "title": "Match", "type": "string"}, "beg": {"default": null, "description": "This is the optional parameter to set start index of the matching boundary.", "title": "Beg", "type": "integer"}, "end": {"default": null, "description": "This is the optional parameter to end start index of the matching boundary.", "title": "End", "type": "integer"}}, "required": ["input", "match"], "title": "StartsWithHook", "type": "object"}, {"additionalProperties": false, "description": "Hook for `base64_decode`. Base64 decodes a string.", "properties": {"help": {"default": null, "description": "A string to display when calling with the `help` argument.", "title": "Help", "type": "string"}, "render_by_default": {"default": null, "description": "A list of string fields to wrap with jinja braces and render by default.", "items": {}, "title": "Render By Default", "type": "array"}, "render_exclude": {"default": null, "description": "A list of field names to not render.", "items": {}, "title": "Render Exclude", "type": "array"}, "is_public": {"default": null, "description": "A boolean if hook is public / callable from outside the provider).", "title": "Is Public", "type": "boolean"}, "skip_output": {"default": false, "description": "A flag to skip the output and not set the key. Can also be set within a hook call.", "title": "Skip Output", "type": "boolean"}, "args": {"default": ["input"], "items": {}, "title": "Args", "type": "array"}, "kwargs": {"default": null, "description": "A field name of type dict to map additional arguments to.", "title": "Kwargs", "type": "string"}, "hook_name": {"default": "base64_decode", "title": "Hook Name", "type": "string"}, "input": {"description": "A string to decode.", "title": "Input", "type": "string"}}, "required": ["input"], "title": "Base64DecodeHook", "type": "object"}, {"additionalProperties": false, "description": "Hook for `base64_encode`. Base64 encodes a string.", "properties": {"help": {"default": null, "description": "A string to display when calling with the `help` argument.", "title": "Help", "type": "string"}, "render_by_default": {"default": null, "description": "A list of string fields to wrap with jinja braces and render by default.", "items": {}, "title": "Render By Default", "type": "array"}, "render_exclude": {"default": null, "description": "A list of field names to not render.", "items": {}, "title": "Render Exclude", "type": "array"}, "is_public": {"default": null, "description": "A boolean if hook is public / callable from outside the provider).", "title": "Is Public", "type": "boolean"}, "skip_output": {"default": false, "description": "A flag to skip the output and not set the key. Can also be set within a hook call.", "title": "Skip Output", "type": "boolean"}, "args": {"default": ["input"], "items": {}, "title": "Args", "type": "array"}, "kwargs": {"default": null, "description": "A field name of type dict to map additional arguments to.", "title": "Kwargs", "type": "string"}, "hook_name": {"default": "base64_encode", "title": "Hook Name", "type": "string"}, "input": {"description": "A string to encode.", "title": "Input", "type": "string"}}, "required": ["input"], "title": "Base64EncodeHook", "type": "object"}, {"additionalProperties": false, "description": "Hook  for `random_hex`. Lists the contents of a directory.", "properties": {"help": {"default": null, "description": "A string to display when calling with the `help` argument.", "title": "Help", "type": "string"}, "render_by_default": {"default": null, "description": "A list of string fields to wrap with jinja braces and render by default.", "items": {}, "title": "Render By Default", "type": "array"}, "render_exclude": {"default": null, "description": "A list of field names to not render.", "items": {}, "title": "Render Exclude", "type": "array"}, "is_public": {"default": null, "description": "A boolean if hook is public / callable from outside the provider).", "title": "Is Public", "type": "boolean"}, "skip_output": {"default": false, "description": "A flag to skip the output and not set the key. Can also be set within a hook call.", "title": "Skip Output", "type": "boolean"}, "args": {"default": ["length"], "items": {}, "title": "Args", "type": "array"}, "kwargs": {"default": null, "description": "A field name of type dict to map additional arguments to.", "title": "Kwargs", "type": "string"}, "hook_name": {"default": "random_hex", "title": "Hook Name", "type": "string"}, "length": {"default": 8, "description": "Number for number of digits - default 8", "title": "Length", "type": "integer"}}, "title": "RandomHexHook", "type": "object"}, {"additionalProperties": false, "description": "Hook for `random_string`. Lists the contents of a directory.", "properties": {"help": {"default": null, "description": "A string to display when calling with the `help` argument.", "title": "Help", "type": "string"}, "render_by_default": {"default": null, "description": "A list of string fields to wrap with jinja braces and render by default.", "items": {}, "title": "Render By Default", "type": "array"}, "render_exclude": {"default": null, "description": "A list of field names to not render.", "items": {}, "title": "Render Exclude", "type": "array"}, "is_public": {"default": null, "description": "A boolean if hook is public / callable from outside the provider).", "title": "Is Public", "type": "boolean"}, "skip_output": {"default": false, "description": "A flag to skip the output and not set the key. Can also be set within a hook call.", "title": "Skip Output", "type": "boolean"}, "args": {"default": ["length", "case"], "items": {}, "title": "Args", "type": "array"}, "kwargs": {"default": null, "description": "A field name of type dict to map additional arguments to.", "title": "Kwargs", "type": "string"}, "hook_name": {"default": "random_string", "title": "Hook Name", "type": "string"}, "length": {"default": 8, "description": "Length of the random string.", "title": "Length", "type": "integer"}, "case": {"default": "lower", "description": "Case of output, one of `upper` or `lower`", "title": "Case", "type": "string"}, "upper": {"default": false, "description": "Flag for upper case. Overrides `case`.", "title": "Upper", "type": "boolean"}}, "title": "RandomStringHook", "type": "object"}]