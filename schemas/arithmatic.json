[{"additionalProperties": false, "description": "Hook for taking the average of a list of numbers.", "properties": {"hook_name": {"default": "average", "title": "Hook Name", "type": "string"}, "help": {"default": null, "description": "A string to display when calling with the `help` argument.", "title": "Help", "type": "string"}, "render_by_default": {"default": null, "description": "A list of string fields to wrap with jinja braces and render by default.", "items": {}, "title": "Render By Default", "type": "array"}, "render_exclude": {"default": null, "description": "A list of field names to not render.", "items": {}, "title": "Render Exclude", "type": "array"}, "is_public": {"default": null, "description": "A boolean if hook is public / callable from outside the provider).", "title": "Is Public", "type": "boolean"}, "skip_output": {"default": false, "description": "A flag to skip the output and not set the key. Can also be set within a hook call.", "title": "Skip Output", "type": "boolean"}, "args": {"default": ["input"], "items": {}, "title": "Args", "type": "array"}, "kwargs": {"default": null, "description": "A field name of type dict to map additional arguments to.", "title": "Kwargs", "type": "string"}, "input": {"description": "The list to calculate the average from.", "items": {"anyOf": [{"type": "integer"}, {"type": "number"}, {"type": "object"}]}, "title": "Input", "type": "array"}, "attribute": {"anyOf": [{"type": "string"}, {"type": "null"}], "default": null, "description": "If the input is a list of objects, an attribute within the object to calculate the average over.", "title": "Attribute"}}, "required": ["input"], "title": "AverageHook", "type": "object"}, {"additionalProperties": false, "description": "Hook for taking the modulo of an integer with optionally checking if it is equal\n to another number, 0 by default.", "properties": {"hook_name": {"default": "modulo", "title": "Hook Name", "type": "string"}, "help": {"default": null, "description": "A string to display when calling with the `help` argument.", "title": "Help", "type": "string"}, "render_by_default": {"default": null, "description": "A list of string fields to wrap with jinja braces and render by default.", "items": {}, "title": "Render By Default", "type": "array"}, "render_exclude": {"default": null, "description": "A list of field names to not render.", "items": {}, "title": "Render Exclude", "type": "array"}, "is_public": {"default": null, "description": "A boolean if hook is public / callable from outside the provider).", "title": "Is Public", "type": "boolean"}, "skip_output": {"default": false, "description": "A flag to skip the output and not set the key. Can also be set within a hook call.", "title": "Skip Output", "type": "boolean"}, "args": {"default": ["input", "divisor", "equal_to"], "items": {}, "title": "Args", "type": "array"}, "kwargs": {"default": null, "description": "A field name of type dict to map additional arguments to.", "title": "Kwargs", "type": "string"}, "input": {"description": "The input integer to take the modulo of.", "title": "Input", "type": "integer"}, "divisor": {"description": "The divisor to take the modulo with.", "title": "Divisor", "type": "integer"}, "equal_to": {"anyOf": [{"type": "integer"}, {"type": "null"}], "default": null, "description": "Optional parameter to assert if the modulo is equal to. Returns a bool then.", "title": "Equal To"}}, "required": ["input", "divisor"], "title": "ModuloHook", "type": "object"}, {"additionalProperties": false, "description": "Hook for summing a list of numbers.", "properties": {"hook_name": {"default": "sum", "title": "Hook Name", "type": "string"}, "help": {"default": null, "description": "A string to display when calling with the `help` argument.", "title": "Help", "type": "string"}, "render_by_default": {"default": null, "description": "A list of string fields to wrap with jinja braces and render by default.", "items": {}, "title": "Render By Default", "type": "array"}, "render_exclude": {"default": null, "description": "A list of field names to not render.", "items": {}, "title": "Render Exclude", "type": "array"}, "is_public": {"default": null, "description": "A boolean if hook is public / callable from outside the provider).", "title": "Is Public", "type": "boolean"}, "skip_output": {"default": false, "description": "A flag to skip the output and not set the key. Can also be set within a hook call.", "title": "Skip Output", "type": "boolean"}, "args": {"default": ["input"], "items": {}, "title": "Args", "type": "array"}, "kwargs": {"default": null, "description": "A field name of type dict to map additional arguments to.", "title": "Kwargs", "type": "string"}, "input": {"description": "The list to sum.", "items": {"anyOf": [{"type": "integer"}, {"type": "number"}, {"type": "object"}]}, "title": "Input", "type": "array"}, "attribute": {"anyOf": [{"type": "string"}, {"type": "null"}], "default": null, "description": "If the input is a list of objects, an attribute within the object to sum over.", "title": "Attribute"}}, "required": ["input"], "title": "SumHook", "type": "object"}]