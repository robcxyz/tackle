[{"additionalProperties": false, "description": "Hook for asserting an input is equal to a value.", "properties": {"hook_name": {"default": "assert", "title": "Hook Name", "type": "string"}, "help": {"default": null, "description": "A string to display when calling with the `help` argument.", "title": "Help", "type": "string"}, "render_by_default": {"default": null, "description": "A list of string fields to wrap with jinja braces and render by default.", "items": {}, "title": "Render By Default", "type": "array"}, "render_exclude": {"default": null, "description": "A list of field names to not render.", "items": {}, "title": "Render Exclude", "type": "array"}, "is_public": {"default": null, "description": "A boolean if hook is public / callable from outside the provider).", "title": "Is Public", "type": "boolean"}, "skip_output": {"default": false, "description": "A flag to skip the output and not set the key. Can also be set within a hook call.", "title": "Skip Output", "type": "boolean"}, "args": {"default": ["input", "value"], "items": {}, "title": "Args", "type": "array"}, "kwargs": {"default": null, "description": "A field name of type dict to map additional arguments to.", "title": "Kwargs", "type": "string"}, "input": {"description": "The input - ie right hand side of assert.", "title": "Input"}, "value": {"default": null, "description": "The value - ie left hand side of assert.", "title": "Value"}, "exit_on_failure": {"default": true, "description": "Whether to exit on assertion error.", "title": "Exit On Failure", "type": "boolean"}}, "required": ["input"], "title": "AssertHook", "type": "object"}, {"additionalProperties": false, "description": "Hook for stopping parsing and returning a given value instead of the public context\n data. For strings it renders the value, for dicts / lists it parses it, for\n everything else (bool / int) it returns the value as is.", "properties": {"hook_name": {"default": "return", "title": "Hook Name", "type": "string"}, "help": {"default": null, "description": "A string to display when calling with the `help` argument.", "title": "Help", "type": "string"}, "render_by_default": {"default": null, "description": "A list of string fields to wrap with jinja braces and render by default.", "items": {}, "title": "Render By Default", "type": "array"}, "render_exclude": {"default": null, "description": "A list of field names to not render.", "items": {}, "title": "Render Exclude", "type": "array"}, "is_public": {"default": null, "description": "A boolean if hook is public / callable from outside the provider).", "title": "Is Public", "type": "boolean"}, "skip_output": {"default": true, "title": "Skip Output", "type": "boolean"}, "args": {"default": ["value"], "items": {}, "title": "Args", "type": "array"}, "kwargs": {"default": null, "description": "A field name of type dict to map additional arguments to.", "title": "Kwargs", "type": "string"}, "value": {"default": null, "description": "The value to return.", "title": "Value"}}, "title": "ReturnHook", "type": "object"}, {"additionalProperties": false, "description": "Hook for stopping parsing and returning a given value instead of the public context\n data. Returns the value as is without parsing or rendering as compared to the\n `return` hook which renders / parses by default.", "properties": {"hook_name": {"default": "returns", "title": "Hook Name", "type": "string"}, "help": {"default": null, "description": "A string to display when calling with the `help` argument.", "title": "Help", "type": "string"}, "render_by_default": {"default": null, "description": "A list of string fields to wrap with jinja braces and render by default.", "items": {}, "title": "Render By Default", "type": "array"}, "render_exclude": {"default": null, "description": "A list of field names to not render.", "items": {}, "title": "Render Exclude", "type": "array"}, "is_public": {"default": null, "description": "A boolean if hook is public / callable from outside the provider).", "title": "Is Public", "type": "boolean"}, "skip_output": {"default": true, "title": "Skip Output", "type": "boolean"}, "args": {"default": ["value"], "items": {}, "title": "Args", "type": "array"}, "kwargs": {"default": null, "description": "A field name of type dict to map additional arguments to.", "title": "Kwargs", "type": "string"}, "value": {"default": null, "description": "The value to return.", "title": "Value"}}, "title": "ReturnsHook", "type": "object"}, {"additionalProperties": false, "description": "Hook for raising an error.", "properties": {"hook_name": {"default": "raise", "title": "Hook Name", "type": "string"}, "help": {"default": null, "description": "A string to display when calling with the `help` argument.", "title": "Help", "type": "string"}, "render_by_default": {"default": null, "description": "A list of string fields to wrap with jinja braces and render by default.", "items": {}, "title": "Render By Default", "type": "array"}, "render_exclude": {"default": null, "description": "A list of field names to not render.", "items": {}, "title": "Render Exclude", "type": "array"}, "is_public": {"default": null, "description": "A boolean if hook is public / callable from outside the provider).", "title": "Is Public", "type": "boolean"}, "skip_output": {"default": false, "description": "A flag to skip the output and not set the key. Can also be set within a hook call.", "title": "Skip Output", "type": "boolean"}, "args": {"default": ["message"], "items": {}, "title": "Args", "type": "array"}, "kwargs": {"default": null, "description": "A field name of type dict to map additional arguments to.", "title": "Kwargs", "type": "string"}, "message": {"default": null, "description": "A message to show when raising an error.", "title": "Message", "type": "string"}}, "title": "RaiseHook", "type": "object"}, {"additionalProperties": false, "description": "Hook for match / case statements. Takes a dict where the keys are matched to a\n value. If the case value has an arrow in it (ie key->: ... ) the arrow is stripped\n away. All matched values are ran as hooks.", "properties": {"hook_name": {"default": "match", "title": "Hook Name", "type": "string"}, "help": {"default": null, "description": "A string to display when calling with the `help` argument.", "title": "Help", "type": "string"}, "render_by_default": {"default": null, "description": "A list of string fields to wrap with jinja braces and render by default.", "items": {}, "title": "Render By Default", "type": "array"}, "render_exclude": {"default": ["case"], "items": {}, "title": "Render Exclude", "type": "array"}, "is_public": {"default": null, "description": "A boolean if hook is public / callable from outside the provider).", "title": "Is Public", "type": "boolean"}, "skip_output": {"default": true, "title": "Skip Output", "type": "boolean"}, "args": {"default": ["value"], "items": {}, "title": "Args", "type": "array"}, "kwargs": {"default": null, "description": "A field name of type dict to map additional arguments to.", "title": "Kwargs", "type": "string"}, "value": {"anyOf": [{"type": "string"}, {"type": "integer"}, {"type": "number"}, {"type": "boolean"}], "default": true, "description": "The value to match against. Defaults to boolean true so that cases can be conditionals.", "render_by_default": true, "title": "Value"}, "case": {"description": "A dictionary where the keys are cases to be matched. Runs hooks if present.", "title": "Case", "type": "object"}}, "required": ["case"], "title": "MatchHook", "type": "object"}]